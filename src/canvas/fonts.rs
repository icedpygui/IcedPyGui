
use phf::phf_map;

pub static FONT_SIZE: phf::Map<char, f32> = phf_map! {
    'a' => 9.8,
    'b' => 10.2,
    'c' => 8.8,
    'd' => 10.2,
    'e' => 9.0,
    'f' => 5.65,
    'g' => 10.2,
    'h' => 10.2,
    'i' => 4.45,
    'j' => 4.45,
    'k' => 9.3,
    'l' => 4.45,
    'm' => 15.6,
    'n' => 10.2,
    'o' => 9.8,
    'p' => 10.2,
    'q' => 10.15,
    'r' => 6.6,
    's' => 8.35,
    't' => 6.3,
    'u' => 10.2,
    'v' => 9.5,
    'w' => 13.1,
    'x' => 9.5,
    'y' => 9.5,
    'z' => 8.43,
    'A' => 11.0,
    'B' => 11.0,
    'C' => 11.2,
    'D' => 12.4,
    'E' => 10.1,
    'F' => 9.2,
    'G' => 12.4,
    'H' => 12.05,
    'I' => 4.73,
    'J' => 4.72,
    'K' => 10.5,
    'L' => 8.95,
    'M' => 13.8,
    'N' => 11.97,
    'O' => 12.6,
    'P' => 9.65,
    'Q' => 12.6,
    'R' => 11.15,
    'S' => 10.15,
    'T' => 9.8,
    'U' => 11.75,
    'V' => 10.97,
    'W' => 15.85,
    'X' => 11.0,
    'Y' => 9.8,
    'Z' => 10.97,
    '1' => 10.2,
    '2' => 10.2,
    '3' => 10.2,
    '4' => 10.2,
    '5' => 10.2,
    '6' => 10.2,
    '7' => 10.2,
    '8' => 10.2,
    '9' => 10.2,
    '0' => 10.2,
    '-' => 8.0,
    '=' => 13.4,
    '~' => 13.4,
    '!' => 6.4,
    '@' => 16.0,
    '#' => 13.4,
    '$' => 10.2,
    '%' => 15.2,
    '^' => 13.4,
    '&' => 12.4,
    '*' => 8.0,
    '(' => 6.3,
    ')' => 6.3,
    '_' => 8.0,
    '+' => 13.4,
    '{' => 10.2,
    '}' => 10.2,
    '|' => 5.4,
    '\\' => 5.4,
    '"' => 7.4,
    '\'' => 4.4,
    ':' => 5.4,
    ';' => 5.4,
    '<' => 13.4,
    '>' => 13.4,
    '?' => 8.5,
    ',' => 5.1,
    '.' => 5.1,
    '/' => 5.4,
    '`' => 4.4,
    ' ' => 5.5,
    };



    #[test]
    fn font_size_text() {
        // Just maing sure the symbols work.
        let symbols = 
            vec![
            '-','=','~','!','@','#','$','%','^','&','*','(',')','_','+','{','}','|','\\','\'','\'',':',';','<','>','?',',','.','/','`',' '
            ];

        for s in symbols {
            let value = FONT_SIZE.get_entry(&s);
            // println!("s {:?}", value);
            assert_ne!(value, None);
        }
    }